{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "RabbitMQ-backed TypeScript Microservices",
    "docs": {
      "api/index": {
        "title": "API Reference"
      },
      "api/temit.consumerhandler": {
        "title": "ConsumerHandler type"
      },
      "api/temit.emitter._constructor_": {
        "title": "Emitter.(constructor)"
      },
      "api/temit.emitter": {
        "title": "Emitter class"
      },
      "api/temit.emitter.send": {
        "title": "Emitter.send() method"
      },
      "api/temit.emitteroptions.delay": {
        "title": "EmitterOptions.delay property"
      },
      "api/temit.emitteroptions": {
        "title": "EmitterOptions interface"
      },
      "api/temit.emitteroptions.priority": {
        "title": "EmitterOptions.priority property"
      },
      "api/temit.endpoint._constructor_": {
        "title": "Endpoint.(constructor)"
      },
      "api/temit.endpoint.close": {
        "title": "Endpoint.close() method"
      },
      "api/temit.endpoint": {
        "title": "Endpoint class"
      },
      "api/temit.endpoint.open": {
        "title": "Endpoint.open() method"
      },
      "api/temit.endpointhandler": {
        "title": "EndpointHandler type"
      },
      "api/temit.endpointoptions": {
        "title": "EndpointOptions interface"
      },
      "api/temit.endpointoptions.prefetch": {
        "title": "EndpointOptions.prefetch property"
      },
      "api/temit.fnconsumerhandler": {
        "title": "FnConsumerHandler type"
      },
      "api/temit.listener._constructor_": {
        "title": "Listener.(constructor)"
      },
      "api/temit.listener.close": {
        "title": "Listener.close() method"
      },
      "api/temit.listener": {
        "title": "Listener class"
      },
      "api/temit.listener.open": {
        "title": "Listener.open() method"
      },
      "api/temit.listenerhandler": {
        "title": "ListenerHandler type"
      },
      "api/temit.listeneroptions.buffer": {
        "title": "ListenerOptions.buffer property"
      },
      "api/temit.listeneroptions.group": {
        "title": "ListenerOptions.group property"
      },
      "api/temit.listeneroptions": {
        "title": "ListenerOptions interface"
      },
      "api/temit.listeneroptions.prefetch": {
        "title": "ListenerOptions.prefetch property"
      },
      "api/temit": {
        "title": "temit package"
      },
      "api/temit.notfunction": {
        "title": "NotFunction type"
      },
      "api/temit.priority": {
        "title": "Priority type"
      },
      "api/temit.requester._constructor_": {
        "title": "Requester.(constructor)"
      },
      "api/temit.requester": {
        "title": "Requester class"
      },
      "api/temit.requester.send": {
        "title": "Requester.send() method"
      },
      "api/temit.requesteroptions": {
        "title": "RequesterOptions interface"
      },
      "api/temit.requesteroptions.priority": {
        "title": "RequesterOptions.priority property"
      },
      "api/temit.requesteroptions.timeout": {
        "title": "RequesterOptions.timeout property"
      },
      "api/temit.temitclient._constructor_": {
        "title": "TemitClient.(constructor)"
      },
      "api/temit.temitclient.close": {
        "title": "TemitClient.close() method"
      },
      "api/temit.temitclient.connect": {
        "title": "TemitClient.connect() method"
      },
      "api/temit.temitclient.emitter": {
        "title": "TemitClient.emitter() method"
      },
      "api/temit.temitclient.endpoint_1": {
        "title": "TemitClient.endpoint() method"
      },
      "api/temit.temitclient.endpoint": {
        "title": "TemitClient.endpoint() method"
      },
      "api/temit.temitclient.isconnected": {
        "title": "TemitClient.isConnected() method"
      },
      "api/temit.temitclient.listener_1": {
        "title": "TemitClient.listener() method"
      },
      "api/temit.temitclient.listener": {
        "title": "TemitClient.listener() method"
      },
      "api/temit.temitclient": {
        "title": "TemitClient class"
      },
      "api/temit.temitclient.name": {
        "title": "TemitClient.name property"
      },
      "api/temit.temitclient.requester": {
        "title": "TemitClient.requester() method"
      },
      "api/temit.temitevent.id": {
        "title": "TemitEvent.id property"
      },
      "api/temit.temitevent": {
        "title": "TemitEvent interface"
      },
      "api/temit.temitevent.resource": {
        "title": "TemitEvent.resource property"
      },
      "api/temit.temitevent.sent": {
        "title": "TemitEvent.sent property"
      },
      "api/temit.temitevent.type": {
        "title": "TemitEvent.type property"
      },
      "api/temit.temitoptions.exchange": {
        "title": "TemitOptions.exchange property"
      },
      "api/temit.temitoptions": {
        "title": "TemitOptions interface"
      },
      "api/temit.temitoptions.url": {
        "title": "TemitOptions.url property"
      },
      "api/temit.unpack": {
        "title": "Unpack type"
      },
      "emitters": {
        "title": "Emitters",
        "sidebar_label": "Emitters"
      },
      "endpoints": {
        "title": "Endpoints",
        "sidebar_label": "Endpoints"
      },
      "error-handling": {
        "title": "Error handling",
        "sidebar_label": "Error handling"
      },
      "event-routing": {
        "title": "Event routing",
        "sidebar_label": "Event routing"
      },
      "internals": {
        "title": "Internals",
        "sidebar_label": "Internals"
      },
      "introduction": {
        "title": "Getting started",
        "sidebar_label": "Introduction"
      },
      "listeners": {
        "title": "Listeners",
        "sidebar_label": "Listeners"
      },
      "markdown": {
        "title": "Markdown",
        "sidebar_label": "Markdown"
      },
      "mdx": {
        "title": "Powered by MDX"
      },
      "recipes/heavy-processing": {
        "title": "Heavy processing",
        "sidebar_label": "Heavy processing"
      },
      "recipes/hooks": {
        "title": "Hooks",
        "sidebar_label": "Hooks"
      },
      "recipes/job-queue": {
        "title": "Job queue",
        "sidebar_label": "Job queue"
      },
      "recipes/middleware": {
        "title": "Middleware",
        "sidebar_label": "Middleware"
      },
      "requesters": {
        "title": "Requesters",
        "sidebar_label": "Requesters"
      },
      "routing": {
        "title": "Routing",
        "sidebar_label": "Routing"
      }
    },
    "links": {
      "Docs": "Docs",
      "API": "API",
      "Blog": "Blog"
    },
    "categories": {
      "Getting started": "Getting started",
      "Recipes": "Recipes",
      "First Category": "First Category"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
